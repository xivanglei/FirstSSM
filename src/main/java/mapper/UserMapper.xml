<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">
    <!--resultMap映射-->
    <resultMap id="userRM" type="entity.User">
        <!--主键-->
        <id property="userId" column="userid" jdbcType="VARCHAR"/>
        <!--一般属性-->
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="telephone" column="telephone"/>
    </resultMap>

    <!--查询一个数据-->
    <select id="get" parameterType="string" resultMap="userRM">
        SELECT * FROM USER WHERE userid = #{userid}
    </select>

    <!--查询-->
    <select id="find" parameterType="map" resultMap="userRM">
        SELECT * FROM USER
        <where>
            <if test="username != null"> AND username = #{username}</if>
            <if test="password != null"> AND password = #{password}</if>
            <if test="name != null"> AND name LIKE #{name}</if>
            <if test="telephone != null"> AND telephone = #{telephone}</if>
        </where>
    </select>

    <!--插入-->
    <insert id="insert" parameterType="entity.User">
        INSERT INTO USER
        (userid, username, password, name, telephone)
        VALUES
        (
          #{userId, jdbcType=VARCHAR},
          #{username, jdbcType=VARCHAR},
          #{password, jdbcType=VARCHAR},
          #{name, jdbcType=VARCHAR},
          #{telephone, jdbcType=VARCHAR}
        )
    </insert>

    <!--修改语句-->
    <update id="update" parameterType="entity.User">
        UPDATE USER
        <set>
            <if test="password != null">password = #{password, jdbcType = VARCHAR},</if>
            <if test="name != null">name = #{name, jdbcType = VARCHAR},</if>
            <if test="telephone != null">telephone = #{telephone, jdbcType = VARCHAR}</if>
        </set>
        WHERE userid = #{userId}
    </update>

    <!--删除一条-->
    <delete id="deleteById" parameterType="string">
        DELETE FROM USER WHERE userid = #{userId}
    </delete>

    <!--删除多条（一维字符串数组的形式）-->
    <delete id="delete" parameterType="string">
        DELETE FROM USER WHERE userid IN
        <foreach collection="array" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>
</mapper>